! ----------------------------------------------------------------------------------------------------
! file: QED_collision.py
!		This script allowed for some very good results 20190701. The electron beam is gaussian.
!	author: oscar amaro
!		GoLP EPP September 2019
!	python
!		command to run single python script
!			$ python3 python_script.py
!		library for searching patterns in file
!			[https://docs.python.org/2/library/re.html]
!	osiris
!		command to run single osiris inputdeck
!			$ osiris-2D.e osiris_inputdeck.2d
!		libraries for parallelization
!			libmpi_usempif08.40.dylib
!			libmpi_usempif08.40-dylib
!		run with mpi
!			mpirun -np 4 osiris-2D.e QED_collision_gaussian.2d
! ----------------------------------------------------------------------------------------------------

simulation
{
omega_p0 = 1.88e15,       ! [?]
algorithm = "qed",
!n0 = 1.741959715e21,       ! [cm^-3], n0 = nc
! You could alternatively set omega_p0
}

!----------the node configuration for this simulation----------
node_conf
{
  node_number(1:2) = 1,1,
  if_periodic(1:2) = .false., .true.,
}


!----------spatial grid----------
grid
{
 nx_p(1:2) = 8750, 200, !see p5 NJP
 coordinates = "cartesian",
}


!----------time step and global data dump timestep number----------
time_step
{
  dt     =  0.04,
  ndump  =  20,
}

!----------restart information----------
restart
{
  ndump_fac  = 0,
  if_restart = .false.,
}

!----------spatial limits of the simulations----------
!(note that this includes information about
! the motion of the simulation box)
space
{
  xmin(1:2) =   0.000d0 ,  0d0,
  xmax(1:2) =   700.0d0,   40d0,
  if_move= .false., .false.,
}

!----------time limits ----------
time
{
  tmin = 0.0d0, tmax  = 500.0,
}

el_mag_fld
{

}

!----------boundary conditions for em-fields ----------
emf_bound
{
    type(1:2,1) = "open", "open",
    type(1:2,2) = "open", "open",
}


!----------diagnostic for electromagnetic fields----------
diag_emf
{
  ndump_fac = 0,
  !reports   = "e1","e2","e3",
}


!----------number of particle species----------
particles
{
  num_species    = 0, ! no "normal" species
  num_qed = 1,
  interpolation  = "quadratic",
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
!   Electrons
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

species
{
    name           = "electrons",
    num_par_max    = 1000000 ,
    rqm            = -1.000,
    q_real = -1.0,   	! Charge of one electron
    num_par_x(1:2) = 1,1,
    add_tag        = .true.,
    init_fields = .true.,
}

udist
{
  ufl(1:3)         = 1001.0, 0.0, 0.0,
  uth(1:3)         = 0.0,  0.14433756729740646, 0.14433756729740646,
}

profile
{

  den_min = 1.e-9,
  density           = 1.e-5,
  
  profile_type(1:2)      = "gaussian" , "gaussian",
  gauss_center(1) = 20.0,
  gauss_center(2) = 20.0,
  gauss_sigma(1) = 2.0,
  gauss_sigma(2) = 2.0,
  gauss_range(1:2,1) = 5.0, 35.0,!rectangle cut of profile
  gauss_range(1:2,2) = 5.0, 35.0,!rectangle cut of profile
}


spe_bound
{
    type(1:2,1) = "open", "open",
    type(1:2,2) = "open", "open",
}


diag_species
{
  ndump_fac = 0,
  reports = "charge",
  ndump_fac_raw=5,
}


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
!   Positrons
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

species
{
    name           = "positrons",
    num_par_max    = 0, ! 1000000 ,
    rqm            = 1.000,
    q_real = 1.0,               ! charge of one positron
    num_par_x(1:2) = 2, 2,
    add_tag        = .false.,
}

udist
{
  ufl(1:3)         = 1001.0, 0.0, 0.0,
}

profile
{

  profile_type      = "math func" ,
  math_func_expr    = "(x1<=50.0)&&(x1>30.0)",
  density           = 0.0, !0.001,

}


spe_bound
{
    type(1:2,1) = "open", "open",
    type(1:2,2) = "open", "open",
}


diag_species
{
  ndump_fac_raw = 5,
  reports = "charge",
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
!   Photons
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!----------information for species PHOTONS ----------
photons
{
  name = "photons",

  ! Initial buffer size
  num_par_max = 200000,
  add_tag = .true.,

}

!----------boundary conditions for PHOTONS----------
phot_bound
{
  type(1:2,1) =   "open", "open",
  type(1:2,2) =   "open", "open",
}


!----------diagnostic for this PHOTONS----------
diag_photons
{
 ndump_fac = 0,
 reports = "density",
 ndump_fac_pairs = 0,
 ndump_fac_ene = 0,
 ndump_fac_pha = 0,
 ndump_fac_raw = 5,
 raw_fraction = 0.01,

 ps_gammamin = 1.0,
 ps_gammamax = 2.0,
 ps_ngamma = 512,
 if_ps_gamma_auto = .true.,

 phasespaces = "g",

}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
!   If you want to add non-qed species (for instance p+)
!   this is the right place
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

zpulse
{
  a0             = 27.0,
  omega0         = 1. ,
  pol_type       = +1 , !clockwise
  pol            = 0 ,
  propagation    = "backward",
  lon_type       = "polynomial",
  lon_rise       = 50.0,
  lon_fall       = 50.0,
  lon_flat       = 300.0,
  lon_start 	   = 80.,
  per_type         = "plane",
!  per_center(1:1) = 0.000,
!  per_fwhm(1:1)   = 30.,
!  per_focus       = 150.,
}


! --------------------- end of osiris input file ---------------
